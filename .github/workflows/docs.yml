name: API Spec & Document Deploy

on:
  workflow_run:
    workflows: ["Automated version release Schedule"]
    types:
      - completed

jobs:
  GenerateApiSpec:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code repository
        id: code_checkout
        uses: actions/checkout@v4

      - name: Setup python environment
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install the required python modules
        id: module_installation
        run: |
          python -m pip install --upgrade pip && pip install pipenv && pipenv lock && pipenv install --system --deploy && pipenv install --dev --system --deploy
      - name: Get the latest tag
        id: latest_tag
        uses: JinoArch/get-latest-tag@latest

      - name: Set latest tag in environment variable
        id: set_tag
        run: echo "LATEST_TAG=${{ steps.latest_tag.outputs.latestTag }}" >> $GITHUB_ENV

      - name: Generate the api specification
        id: api_specification
        run: |
          cd src/auth_service && python openapi_doc.py && cd ../main_service && python openapi_doc.py && cd ../user_service && python openapi_doc.py && cd ../..
      - name: Commit the generaed changes
        uses: stefanzweifel/git-auto-commit-action@v5
        id: commit_changes
        with:
          commit_message: |
            docs: api spec generation based on ${{ steps.latest_tag.outputs.latestTag }}
          branch: main

  DeployMkdocs:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    needs: GenerateApiSpec

    steps:
      - name: Checkout code repository
        id: code_checkout
        uses: actions/checkout@v4

      - name: Setup python environment
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install the required python modules
        id: module_installation
        run: |
          python -m pip install --upgrade pip &&  pip install pipenv && pipenv lock && pipenv install --system --deploy && pipenv install --dev --system --deploy

      - name: Deploy Documentation on gh-pages branch
        id: deploy_mkdocs
        run: |
          mkdocs gh-deploy --force
